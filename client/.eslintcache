[{"/home/kalle/Desktop/Skola/TravelAppThird/client/src/index.js":"1","/home/kalle/Desktop/Skola/TravelAppThird/client/src/components/EditPlan.js":"2","/home/kalle/Desktop/Skola/TravelAppThird/client/src/components/plan/PlanItem.js":"3","/home/kalle/Desktop/Skola/TravelAppThird/client/src/components/CreatePlan.js":"4","/home/kalle/Desktop/Skola/TravelAppThird/client/src/components/ListPlans.js":"5","/home/kalle/Desktop/Skola/TravelAppThird/client/src/App.js":"6","/home/kalle/Desktop/Skola/TravelAppThird/client/src/components/ShowPlan.js":"7"},{"size":219,"mtime":1606325798000,"results":"8","hashOfConfig":"9"},{"size":2924,"mtime":1606325798000,"results":"10","hashOfConfig":"9"},{"size":3352,"mtime":1606325798000,"results":"11","hashOfConfig":"9"},{"size":3627,"mtime":1606329073454,"results":"12","hashOfConfig":"9"},{"size":1361,"mtime":1606329089702,"results":"13","hashOfConfig":"9"},{"size":333,"mtime":1606329101430,"results":"14","hashOfConfig":"9"},{"size":1327,"mtime":1606325798000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1otr611",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/home/kalle/Desktop/Skola/TravelAppThird/client/src/index.js",[],"/home/kalle/Desktop/Skola/TravelAppThird/client/src/components/EditPlan.js",["32"],"/home/kalle/Desktop/Skola/TravelAppThird/client/src/components/plan/PlanItem.js",["33","34","35","36","37"],"import React, { Fragment, useEffect, useState } from \"react\"\nimport { Button, Card, Collapse, Row, Col, ButtonGroup } from 'react-bootstrap'\nimport EditPlan from \"../EditPlan\"\nimport ShowPlan from \"../ShowPlan\"\n\nconst PlanItem = plan => {\n    const { id, title, description, country, start_date, end_date } = plan\n    const [open, setOpen] = useState(false)\n\n    const deletePlan = id => {\n        fetch(`http://localhost:8080/plan/${id}`, { method: \"DELETE\" })\n            .then(() => {\n                window.location.href = '/'\n            })\n    }\n\n    const expandItem = () => {\n        open ? setOpen(false) : setOpen(true)\n    }\n    return (\n        <Card style={{ marginBottom: \"1rem\" }}>\n            <Card.Header>{country}</Card.Header>\n            <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Row>\n                    <Col xs={9}>\n                        <Card.Text>\n                            {description}\n                        </Card.Text>\n                    </Col>\n                    <Col>\n                        <p><small>Starts:  {new Date(start_date).toDateString()}</small> <br />\n                            <small>Ends:  {new Date(end_date).toDateString()}</small></p>\n                    </Col>\n                </Row>\n                <Collapse in={open}>\n                    <div id=\"example-collapse-text\">\n                        <p>\n                            Planned experiences:\n                        </p>\n                        {\n                            plan.experiences.length == 0 ?\n                                \"None!\" : plan.experiences.map((experience, i) => {\n                                    return <Card style={{ marginBottom: \"1rem\" }}>\n                                        <Card.Header>{experience.title}</Card.Header>\n                                        <Card.Body>\n                                            <Row>\n                                                <Col xs={9}>\n                                                    <Card.Text>\n                                                        {experience.description}\n                                                    </Card.Text>\n                                                </Col>\n                                                <Col>\n                                                    <p><small>Starts:  {new Date(experience.start_datetime).toLocaleDateString()}</small> <br />\n                                                        <small>Ends:  {new Date(experience.end_datetime).toLocaleDateString()}</small></p>\n                                                </Col>\n                                            </Row>\n                                        </Card.Body>\n                                    </Card>\n                                })\n                        }\n                    </div>\n                </Collapse>\n\n\n            </Card.Body>\n            <Card.Footer>\n                <ButtonGroup aria-label=\"Basic example\">\n                    <Button variant=\"success\" onClick={expandItem}>Expand</Button>\n                    <EditPlan plan={plan}></EditPlan>\n                    <Button variant=\"danger\" onClick={() => deletePlan(plan.id)} >Delete</Button>\n                </ButtonGroup>\n            </Card.Footer>\n\n        </Card >\n    );\n};\nexport default PlanItem\n","/home/kalle/Desktop/Skola/TravelAppThird/client/src/components/CreatePlan.js",[],"/home/kalle/Desktop/Skola/TravelAppThird/client/src/components/ListPlans.js",["38","39","40","41","42"],"/home/kalle/Desktop/Skola/TravelAppThird/client/src/App.js",[],"/home/kalle/Desktop/Skola/TravelAppThird/client/src/components/ShowPlan.js",["43"],"import React, { Fragment, useEffect, useState } from \"react\";\nconst ShowPlan = ({ plan }) => {\n\n  const [planData, setPlanData] = useState(null)\n\n\n  const loadDetails = () => {\n    const query = `http://localhost:8080/plan/${plan}`\n    fetch(query)\n      .then(r => r.json())\n      .then(data => setPlanData(data))\n  }\n\n  return (\n    <Fragment>\n      <button\n        type=\"button\"\n        class=\"btn btn-success\"\n        data-toggle=\"modal\"\n        data-target=\"#myModal\"\n        onClick={loadDetails}\n      >\n        Expand\n      </button>\n\n      {      planData && <div class=\"modal\" id=\"myModal\">\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h4 class=\"modal-title\">{planData.title}</h4>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n                &times;\n              </button>\n            </div>\n\n            <div class=\"modal-body\">\n              <p>\n                {planData.description}\n              </p>\n            </div>\n\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>}\n    </Fragment>\n  );\n};\n\nexport default ShowPlan;\n",{"ruleId":"44","severity":1,"message":"45","line":12,"column":13,"nodeType":"46","messageId":"47","endLine":12,"endColumn":21},{"ruleId":"44","severity":1,"message":"48","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"44","severity":1,"message":"49","line":1,"column":27,"nodeType":"46","messageId":"47","endLine":1,"endColumn":36},{"ruleId":"44","severity":1,"message":"50","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":16},{"ruleId":"44","severity":1,"message":"51","line":7,"column":13,"nodeType":"46","messageId":"47","endLine":7,"endColumn":15},{"ruleId":"52","severity":1,"message":"53","line":42,"column":53,"nodeType":"54","messageId":"55","endLine":42,"endColumn":55},{"ruleId":"44","severity":1,"message":"48","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"44","severity":1,"message":"56","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":16},{"ruleId":"44","severity":1,"message":"50","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":16},{"ruleId":"44","severity":1,"message":"57","line":5,"column":10,"nodeType":"46","messageId":"47","endLine":5,"endColumn":19},{"ruleId":"44","severity":1,"message":"58","line":9,"column":10,"nodeType":"46","messageId":"47","endLine":9,"endColumn":20},{"ruleId":"44","severity":1,"message":"49","line":1,"column":27,"nodeType":"46","messageId":"47","endLine":1,"endColumn":36},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'useEffect' is defined but never used.","'ShowPlan' is defined but never used.","'id' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'EditPlan' is defined but never used.","'CardGroup' is defined but never used.","'experience' is assigned a value but never used."]